#ifndef DISCORD_CLIENT_H_
#define DISCORD_CLIENT_H_

#define MAX_MESSAGE_LINES 30
#define MAC_ADDRESS { 0xA8, 0x61, 0x0A, 0xAE, 0x74, 0xA6 }

// can be IP or domain name
#define SERVER_ADDRESS "149.56.141.231"

#include "../Ethernet/EthernetClient.h"
#include <unistd.h>

// string at the top of /get/[channel]/[scroll]
#define DISCORD_START "DISCORD_START\n";

// maximum buffer size lines*(message area width / width of thinnest character) + some extra margin)
// 25*480/2 + 500
#define RX_BUFFER_SIZE 6500

class DiscordClient {

enum MessageFont { USERNAME, MESSAGE };

struct MessageLine {
	MessageFont font;
	char content[320];
};

public:
  DiscordClient();
  ~DiscordClient();
  // initializes the Ethernet client
  void init();

  // blocking function that populates the cache with the contents of a chennel
  void fetchChannel(const char* channelId, uint8_t scroll);

  // gets a specified line
  // line 0 is at the bottom, line MAX_MESSAGE_LINES is at the top
  const MessageLine* getLine(uint8_t line);

  // blocking function that sends a message using the bot account
  void sendChannel(const char* channelId, const char* message);


private:
  static MessageLine messageCache[MAX_MESSAGE_LINES];
  EthernetClient* client;
  const char* startString = DISCORD_START;

};

#endif
